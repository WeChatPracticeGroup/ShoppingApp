{"version":3,"sources":["index.js"],"names":[],"mappingsfile":"index.js","sourcesContent":["\nconst browserslist = require('browserslist');\nconst valueParser = require('postcss-value-parser');\n\nconst regexLowerCaseUPrefix = /^u(?=\\+)/;\n\n/**\n * @param {string} range\n * @return {string}\n */\nfunction unicode(range) {\n  const values = range.slice(2).split('-');\n\n  if (values.length < 2) {\n    return range;\n  }\n\n  const left = values[0].split('');\n  const right = values[1].split('');\n\n  if (left.length !== right.length) {\n    return range;\n  }\n\n  const merged = mergeRangeBounds(left, right);\n\n  if (merged) {\n    return merged;\n  }\n\n  return range;\n}\n/**\n * @param {string[]} left\n * @param {string[]} right\n * @return {false|string}\n */\nfunction mergeRangeBounds(left, right) {\n  let questionCounter = 0;\n  let group = 'u+';\n  for (const [index, value] of left.entries()) {\n    if (value === right[index] && questionCounter === 0) {\n      group = group + value;\n    } else if (value === '0' && right[index] === 'f') {\n      questionCounter++;\n      group = group + '?';\n    } else {\n      return false;\n    }\n  }\n  // The maximum number of wildcard characters (?) for ranges is 5.\n  if (questionCounter < 6) {\n    return group;\n  } else {\n    return false;\n  }\n}\n\n/**\n * IE and Edge before 16 version ignore the unicode-range if the 'U' is lowercase\n *\n * https://caniuse.com/#search=unicode-range\n *\n * @param {string} browser\n * @return {boolean}\n */\nfunction hasLowerCaseUPrefixBug(browser) {\n  return browserslist('ie <=11, edge <= 15').includes(browser);\n}\n\n/**\n * @param {string} value\n * @return {string}\n */\nfunction transform(value, isLegacy = false) {\n  return valueParser(value)\n    .walk((child) => {\n      if (child.type === 'unicode-range') {\n        const transformed = unicode(child.value.toLowerCase());\n\n        child.value = isLegacy\n          ? transformed.replace(regexLowerCaseUPrefix, 'U')\n          : transformed;\n      }\n\n      return false;\n    })\n    .toString();\n}\n\n/**\n * @type {import('postcss').PluginCreator<void>}\n * @return {import('postcss').Plugin}\n */\nfunction pluginCreator() {\n  return {\n    postcssPlugin: 'postcss-normalize-unicode',\n    /** @param {import('postcss').Result & {opts: browserslist.Options}} result*/\n    prepare(result) {\n      const cache = new Map();\n      const resultOpts = result.opts || {};\n      const browsers = browserslist(null, {\n        stats: resultOpts.stats,\n        path: __dirname,\n        env: resultOpts.env,\n      });\n      const isLegacy = browsers.some(hasLowerCaseUPrefixBug);\n\n      return {\n        OnceExit(css) {\n          css.walkDecls(/^unicode-range$/i, (decl) => {\n            const value = decl.value;\n\n            if (cache.has(value)) {\n              decl.value = cache.get(value);\n\n              return;\n            }\n\n            const newValue = transform(value, isLegacy);\n\n            decl.value = newValue;\n            cache.set(value, newValue);\n          });\n        },\n      };\n    },\n  };\n}\n\npluginCreator.postcss = true;\nmodule.exports = pluginCreator;\n"]}