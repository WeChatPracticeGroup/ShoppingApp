{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\nconst plugin = 'postcss-discard-empty';\n/**\n * @param {import('postcss').Root} css\n * @param {import('postcss').Result} result\n * @return {void}\n */\nfunction discardAndReport(css, result) {\n  /**\n   * @param {import('postcss').AnyNode} node\n   * @return {void}\n   */\n  function discardEmpty(node) {\n    const { type } = node;\n    /** @type {(import('postcss').ChildNode | import('postcss').ChildProps)[] | undefined} */\n    const sub = /** @type {any} */ (node).nodes;\n    if (sub) {\n      /** @type {import('postcss').Container} */ (node).each(discardEmpty);\n    }\n\n    if (\n      (type === 'decl' && !node.value && !node.prop.startsWith('--')) ||\n      (type === 'rule' && !node.selector) ||\n      (sub && !sub.length) ||\n      (type === 'atrule' &&\n        ((!sub && !node.params) ||\n          (!node.params &&\n            !(/** @type {import('postcss').ChildNode[]}*/ (sub).length))))\n    ) {\n      node.remove();\n\n      result.messages.push({\n        type: 'removal',\n        plugin,\n        node,\n      });\n    }\n  }\n\n  css.each(discardEmpty);\n}\n\n/**\n * @type {import('postcss').PluginCreator<void>}\n * @return {import('postcss').Plugin}\n */\nfunction pluginCreator() {\n  return {\n    postcssPlugin: plugin,\n    OnceExit(css, { result }) {\n      discardAndReport(css, result);\n    },\n  };\n}\n\npluginCreator.postcss = true;\nmodule.exports = pluginCreator;\n"]}