{"version":3,"sources":["index.js"],"names":[],"mappingsfile":"index.js","sourcesContent":["\n/**\n * @author Ben Briggs\n * @license MIT\n * @module cssnano:preset:default\n * @overview\n *\n * This default preset for cssnano only includes transforms that make no\n * assumptions about your CSS other than what is passed in. In previous\n * iterations of cssnano, assumptions were made about your CSS which caused\n * output to look different in certain use cases, but not others. These\n * transforms have been moved from the defaults to other presets, to make\n * this preset require only minimal configuration.\n */\n\nconst cssDeclarationSorter = require('css-declaration-sorter');\nconst postcssDiscardComments = require('postcss-discard-comments');\nconst postcssReduceInitial = require('postcss-reduce-initial');\nconst postcssMinifyGradients = require('postcss-minify-gradients');\nconst postcssSvgo = require('postcss-svgo');\nconst postcssReduceTransforms = require('postcss-reduce-transforms');\nconst postcssConvertValues = require('postcss-convert-values');\nconst postcssCalc = require('postcss-calc');\nconst postcssColormin = require('postcss-colormin');\nconst postcssOrderedValues = require('postcss-ordered-values');\nconst postcssMinifySelectors = require('postcss-minify-selectors');\nconst postcssMinifyParams = require('postcss-minify-params');\nconst postcssNormalizeCharset = require('postcss-normalize-charset');\nconst postcssMinifyFontValues = require('postcss-minify-font-values');\nconst postcssNormalizeUrl = require('postcss-normalize-url');\nconst postcssMergeLonghand = require('postcss-merge-longhand');\nconst postcssDiscardDuplicates = require('postcss-discard-duplicates');\nconst postcssDiscardOverridden = require('postcss-discard-overridden');\nconst postcssNormalizeRepeatStyle = require('postcss-normalize-repeat-style');\nconst postcssMergeRules = require('postcss-merge-rules');\nconst postcssDiscardEmpty = require('postcss-discard-empty');\nconst postcssUniqueSelectors = require('postcss-unique-selectors');\nconst postcssNormalizeString = require('postcss-normalize-string');\nconst postcssNormalizePositions = require('postcss-normalize-positions');\nconst postcssNormalizeWhitespace = require('postcss-normalize-whitespace');\nconst postcssNormalizeUnicode = require('postcss-normalize-unicode');\nconst postcssNormalizeDisplayValues = require('postcss-normalize-display-values');\nconst postcssNormalizeTimingFunctions = require('postcss-normalize-timing-functions');\nconst { rawCache } = require('cssnano-utils');\n\n/** @typedef {{\ndiscardComments?: false | import('postcss-discard-comments').Options & { exclude?: true},\nreduceInitial?:  false | { exclude?: true}\nminifyGradients?:  false | { exclude?: true}\nsvgo?: false | import('postcss-svgo').Options & { exclude?: true},\nreduceTransforms?:  false | { exclude?: true}\nconvertValues?: false | import('postcss-convert-values').Options & { exclude?: true},\ncalc?: false | import('postcss-calc').PostCssCalcOptions & { exclude?: true},\ncolormin?: false | Record<string, any> & { exclude?: true},\norderedValues?: false | { exclude?: true},\nminifySelectors?: false | { exclude?: true},\nminifyParams?: false | { exclude?: true},\nnormalizeCharset?: false | import('postcss-normalize-charset').Options & { exclude?: true},\nminifyFontValues?: false | import('postcss-minify-font-values').Options & { exclude?: true},\nnormalizeUrl?: false | import('postcss-normalize-url').Options & { exclude?: true},\nmergeLonghand?: false | { exclude?: true},\ndiscardDuplicates?: false | { exclude?: true},\ndiscardOverridden?: false | { exclude?: true},\nnormalizeRepeatStyle?: false | { exclude?: true},\nmergeRules?: false | { exclude?: true},\ndiscardEmpty?: false | { exclude?: true},\nuniqueSelectors?: false | { exclude?: true},\nnormalizeString?: false | import('postcss-normalize-string').Options & { exclude?: true},\nnormalizePositions?: false | { exclude?: true},\nnormalizeWhitespace?: false| { exclude?: true},\nnormalizeUnicode?: false | { exclude?: true},\nnormalizeDisplayValues?: false | { exclude?: true},\nnormalizeTimingFunctions?: false | { exclude?: true},\nrawCache?: false | { exclude?: true}}} Options */\n\nconst defaultOpts = {\n  convertValues: {\n    length: false,\n  },\n  normalizeCharset: {\n    add: false,\n  },\n  cssDeclarationSorter: {\n    keepOverrides: true,\n  },\n};\n\n/**\n * @param {Options} opts\n * @return {{plugins: [import('postcss').PluginCreator<any>, boolean | Record<string, any> | undefined][]}}\n */\nfunction defaultPreset(opts = {}) {\n  const options = Object.assign({}, defaultOpts, opts);\n\n  /** @type {[import('postcss').PluginCreator<any>, boolean | Record<string, any> | undefined][]} **/\n  const plugins = [\n    [postcssDiscardComments, options.discardComments],\n    [postcssMinifyGradients, options.minifyGradients],\n    [postcssReduceInitial, options.reduceInitial],\n    [postcssSvgo, options.svgo],\n    [postcssNormalizeDisplayValues, options.normalizeDisplayValues],\n    [postcssReduceTransforms, options.reduceTransforms],\n    [postcssColormin, options.colormin],\n    [postcssNormalizeTimingFunctions, options.normalizeTimingFunctions],\n    [postcssCalc, options.calc],\n    [postcssConvertValues, options.convertValues],\n    [postcssOrderedValues, options.orderedValues],\n    [postcssMinifySelectors, options.minifySelectors],\n    [postcssMinifyParams, options.minifyParams],\n    [postcssNormalizeCharset, options.normalizeCharset],\n    [postcssDiscardOverridden, options.discardOverridden],\n    [postcssNormalizeString, options.normalizeString],\n    [postcssNormalizeUnicode, options.normalizeUnicode],\n    [postcssMinifyFontValues, options.minifyFontValues],\n    [postcssNormalizeUrl, options.normalizeUrl],\n    [postcssNormalizeRepeatStyle, options.normalizeRepeatStyle],\n    [postcssNormalizePositions, options.normalizePositions],\n    [postcssNormalizeWhitespace, options.normalizeWhitespace],\n    [postcssMergeLonghand, options.mergeLonghand],\n    [postcssDiscardDuplicates, options.discardDuplicates],\n    [postcssMergeRules, options.mergeRules],\n    [postcssDiscardEmpty, options.discardEmpty],\n    [postcssUniqueSelectors, options.uniqueSelectors],\n    [cssDeclarationSorter, options.cssDeclarationSorter],\n    [rawCache, options.rawCache],\n  ];\n\n  return { plugins };\n}\n\nmodule.exports = defaultPreset;\n"]}